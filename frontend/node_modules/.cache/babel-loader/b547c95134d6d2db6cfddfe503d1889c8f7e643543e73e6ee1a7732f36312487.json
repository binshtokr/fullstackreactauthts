{"ast":null,"code":"import axios from 'axios';\nexport const registerUser = async userData => {\n  const response = await axios.post('http://localhost:5000/api/persons', userData);\n  console.log(\"response\", response);\n  return response.data;\n};\nexport const loginUser = async userData => {\n  try {\n    const response = await axios.post('http://localhost:5000/login', userData);\n    if (response.status === 200 || response.status === 201) {\n      const {\n        name,\n        email\n      } = response.data.person;\n      return {\n        name,\n        email\n      };\n    } else {\n      throw new Error('Failed to log in');\n    }\n  } catch (error) {\n    console.error(\"Login failed\", error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","registerUser","userData","response","post","console","log","data","loginUser","status","name","email","person","Error","error"],"sources":["C:/Program Files/BTAPPLEX/reactauthts/frontend/src/services/authService.ts"],"sourcesContent":["import axios from 'axios';\r\n\r\nexport const registerUser = async (userData: { name: string; email: string; passwd: string }) => {\r\n    const response = await axios.post('http://localhost:5000/api/persons', userData);\r\n    console.log(\"response\", response)\r\n    return response.data;\r\n};\r\n\r\nexport const loginUser = async (userData: { email: string, passwd: string }) => {\r\n    try {\r\n        const response = await axios.post('http://localhost:5000/login', userData);\r\n\r\n        if (response.status === 200 || response.status === 201 ) {\r\n            const { name, email } = response.data.person;\r\n            return { name, email };\r\n        } else {\r\n            throw new Error('Failed to log in');\r\n        }\r\n    } catch (error) {\r\n        console.error(\"Login failed\", error);\r\n        throw error;\r\n    }\r\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,YAAY,GAAG,MAAOC,QAAyD,IAAK;EAC7F,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,IAAI,CAAC,mCAAmC,EAAEF,QAAQ,CAAC;EAChFG,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEH,QAAQ,CAAC;EACjC,OAAOA,QAAQ,CAACI,IAAI;AACxB,CAAC;AAED,OAAO,MAAMC,SAAS,GAAG,MAAON,QAA2C,IAAK;EAC5E,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,IAAI,CAAC,6BAA6B,EAAEF,QAAQ,CAAC;IAE1E,IAAIC,QAAQ,CAACM,MAAM,KAAK,GAAG,IAAIN,QAAQ,CAACM,MAAM,KAAK,GAAG,EAAG;MACrD,MAAM;QAAEC,IAAI;QAAEC;MAAM,CAAC,GAAGR,QAAQ,CAACI,IAAI,CAACK,MAAM;MAC5C,OAAO;QAAEF,IAAI;QAAEC;MAAM,CAAC;IAC1B,CAAC,MAAM;MACH,MAAM,IAAIE,KAAK,CAAC,kBAAkB,CAAC;IACvC;EACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZT,OAAO,CAACS,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;IACpC,MAAMA,KAAK;EACf;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}