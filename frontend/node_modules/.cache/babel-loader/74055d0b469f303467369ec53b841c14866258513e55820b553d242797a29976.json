{"ast":null,"code":"var _jsxFileName = \"C:\\\\Program Files\\\\BTAPPLEX\\\\reactauthts\\\\frontend\\\\src\\\\components\\\\Home.tsx\",\n  _s = $RefreshSig$();\n// src/components/Home.tsx\nimport React, { useEffect } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext'; // Import the AuthContext\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const {\n    isAuthenticated,\n    setIsAuthenticated,\n    setUser,\n    user\n  } = useAuth(); // Access both user and isAuthenticated from context\n  const navigate = useNavigate();\n  let timeout;\n\n  // Function to handle logout\n  const handleLogout = () => {\n    setIsAuthenticated(false); // Reset authentication status\n    setUser(null); // Reset user data\n    navigate('/signin'); // Redirect to the sign-in page\n  };\n\n  // Reset session timer\n  const resetSessionTimer = () => {\n    // If the user is authenticated, we start or reset the timeout\n    if (isAuthenticated) {\n      clearTimeout(timeout); // Clear the previous timeout\n      timeout = setTimeout(handleLogout, 60000); // Set a new timeout (60 seconds)\n    }\n  };\n\n  // Listen for user activity events to reset the session timer\n  useEffect(() => {\n    if (!isAuthenticated) return; // Do nothing if the user is not authenticated\n\n    // Reset session timer on user activity\n    window.addEventListener('mousemove', resetSessionTimer);\n    window.addEventListener('keydown', resetSessionTimer);\n\n    // Start the timer when the component mounts\n    resetSessionTimer();\n\n    // Clean up listeners when the component unmounts or when isAuthenticated changes\n    return () => {\n      window.removeEventListener('mousemove', resetSessionTimer);\n      window.removeEventListener('keydown', resetSessionTimer);\n      clearTimeout(timeout); // Clear the timeout if the component is unmounted\n    };\n  }, [isAuthenticated]); // Only apply if the user is authenticated\n\n  // Redirect to sign-in page if the user is not authenticated\n  useEffect(() => {\n    if (!isAuthenticated) {\n      navigate('/signin'); // Redirect to the sign-in page\n    }\n  }, [isAuthenticated, navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: '100vh',\n      backgroundColor: '#f8f9fa'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Welcome to the Home Page!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), user ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Hello, \", user.name, \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"You are successfully signed in.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"danger\",\n        onClick: handleLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"vAyclUZke7fEnhByE4jowYiOcTQ=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","Button","useNavigate","useAuth","jsxDEV","_jsxDEV","Home","_s","isAuthenticated","setIsAuthenticated","setUser","user","navigate","timeout","handleLogout","resetSessionTimer","clearTimeout","setTimeout","window","addEventListener","removeEventListener","style","display","justifyContent","alignItems","height","backgroundColor","children","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","name","variant","onClick","_c","$RefreshReg$"],"sources":["C:/Program Files/BTAPPLEX/reactauthts/frontend/src/components/Home.tsx"],"sourcesContent":["// src/components/Home.tsx\r\nimport React, { useEffect } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../context/AuthContext'; // Import the AuthContext\r\n\r\nconst Home: React.FC = () => {\r\n  const { isAuthenticated, setIsAuthenticated, setUser, user } = useAuth(); // Access both user and isAuthenticated from context\r\n  const navigate = useNavigate();\r\n  let timeout: NodeJS.Timeout;\r\n\r\n  // Function to handle logout\r\n  const handleLogout = () => {\r\n    setIsAuthenticated(false); // Reset authentication status\r\n    setUser(null); // Reset user data\r\n    navigate('/signin'); // Redirect to the sign-in page\r\n  };\r\n\r\n  // Reset session timer\r\n  const resetSessionTimer = () => {\r\n    // If the user is authenticated, we start or reset the timeout\r\n    if (isAuthenticated) {\r\n      clearTimeout(timeout); // Clear the previous timeout\r\n      timeout = setTimeout(handleLogout, 60000); // Set a new timeout (60 seconds)\r\n    }\r\n  };\r\n\r\n  // Listen for user activity events to reset the session timer\r\n  useEffect(() => {\r\n    if (!isAuthenticated) return; // Do nothing if the user is not authenticated\r\n\r\n    // Reset session timer on user activity\r\n    window.addEventListener('mousemove', resetSessionTimer);\r\n    window.addEventListener('keydown', resetSessionTimer);\r\n\r\n    // Start the timer when the component mounts\r\n    resetSessionTimer();\r\n\r\n    // Clean up listeners when the component unmounts or when isAuthenticated changes\r\n    return () => {\r\n      window.removeEventListener('mousemove', resetSessionTimer);\r\n      window.removeEventListener('keydown', resetSessionTimer);\r\n      clearTimeout(timeout); // Clear the timeout if the component is unmounted\r\n    };\r\n  }, [isAuthenticated]); // Only apply if the user is authenticated\r\n\r\n  // Redirect to sign-in page if the user is not authenticated\r\n  useEffect(() => {\r\n    if (!isAuthenticated) {\r\n      navigate('/signin'); // Redirect to the sign-in page\r\n    }\r\n  }, [isAuthenticated, navigate]);\r\n\r\n  return (\r\n    <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100vh', backgroundColor: '#f8f9fa' }}>\r\n      <div style={{ textAlign: 'center' }}>\r\n        <h1>Welcome to the Home Page!</h1>\r\n        {/* Display user's name if available */}\r\n        {user ? (\r\n          <p>Hello, {user.name}!</p>\r\n        ) : (\r\n          <p>You are successfully signed in.</p>\r\n        )}\r\n        <Button variant=\"danger\" onClick={handleLogout}>\r\n          Logout\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}