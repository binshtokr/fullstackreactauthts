{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nconst useFormValidation = initialValues => {\n  _s();\n  const [values, setValues] = useState(initialValues);\n  const [validated, setValidated] = useState(false);\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setValues(prevValues => ({\n      ...prevValues,\n      [name]: value\n    }));\n  };\n  const validateForm = () => {\n    if (values.name && values.email && values.passwd) {\n      return true;\n    }\n    return false;\n  };\n  return {\n    values,\n    setValues,\n    validated,\n    setValidated,\n    handleChange,\n    validateForm\n  };\n};\n_s(useFormValidation, \"2rSVXQr3/AfouCvxPPmYWnWt36g=\");\nexport default useFormValidation;","map":{"version":3,"names":["useState","useFormValidation","initialValues","_s","values","setValues","validated","setValidated","handleChange","event","name","value","target","prevValues","validateForm","email","passwd"],"sources":["C:/Program Files/BTAPPLEX/reactauthts/frontend/src/hooks/useFormValidation.ts"],"sourcesContent":["import { useState } from \"react\";\r\n\r\ninterface FormValues {\r\n    name: string;\r\n    email: string;\r\n    passwd: string;\r\n}\r\n\r\nconst useFormValidation = (initialValues: FormValues) => {\r\n    const [values, setValues] = useState<FormValues>(initialValues);\r\n    const [validated, setValidated] = useState(false);\r\n\r\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const { name, value } = event.target;\r\n        setValues((prevValues) => ({\r\n            ...prevValues,\r\n            [name]: value,\r\n        }));\r\n    };\r\n\r\n    const validateForm = () => {\r\n        if (values.name && values.email && values.passwd) {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    return {\r\n        values,\r\n        setValues,\r\n        validated,\r\n        setValidated,\r\n        handleChange,\r\n        validateForm,\r\n    };\r\n};\r\n\r\nexport default useFormValidation;\r\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAQhC,MAAMC,iBAAiB,GAAIC,aAAyB,IAAK;EAAAC,EAAA;EACrD,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGL,QAAQ,CAAaE,aAAa,CAAC;EAC/D,MAAM,CAACI,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMQ,YAAY,GAAIC,KAA0C,IAAK;IACjE,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,KAAK,CAACG,MAAM;IACpCP,SAAS,CAAEQ,UAAU,KAAM;MACvB,GAAGA,UAAU;MACb,CAACH,IAAI,GAAGC;IACZ,CAAC,CAAC,CAAC;EACP,CAAC;EAED,MAAMG,YAAY,GAAGA,CAAA,KAAM;IACvB,IAAIV,MAAM,CAACM,IAAI,IAAIN,MAAM,CAACW,KAAK,IAAIX,MAAM,CAACY,MAAM,EAAE;MAC9C,OAAO,IAAI;IACf;IACA,OAAO,KAAK;EAChB,CAAC;EAED,OAAO;IACHZ,MAAM;IACNC,SAAS;IACTC,SAAS;IACTC,YAAY;IACZC,YAAY;IACZM;EACJ,CAAC;AACL,CAAC;AAACX,EAAA,CA3BIF,iBAAiB;AA6BvB,eAAeA,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}