{"ast":null,"code":"var _s = $RefreshSig$();\n// src/services/authService.ts\nimport axios from 'axios';\nimport { useAuth } from '../context/AuthContext';\nexport const registerUser = async userData => {\n  const response = await axios.post('http://localhost:5000/api/persons', userData);\n  console.log(\"response\", response);\n  return response.data;\n};\nexport const loginUser = async credentials => {\n  _s();\n  try {\n    const response = await axios.post('http://localhost:5000/login', credentials);\n    if (response.status === 200) {\n      // Assuming the response includes user data\n      const {\n        name,\n        email\n      } = response.data.person;\n\n      // Set authentication status and user data in the context\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      const {\n        setIsAuthenticated,\n        setUser\n      } = useAuth();\n      setIsAuthenticated(true);\n      setUser({\n        name,\n        email\n      });\n      return {\n        name,\n        email\n      };\n    } else {\n      throw new Error('Failed to log in');\n    }\n  } catch (error) {\n    console.error(\"Login failed\", error);\n    throw error;\n  }\n};\n_s(loginUser, \"w4F6GnxdwXVZPko4bR/nK8IXLmE=\", false, function () {\n  return [useAuth];\n});","map":{"version":3,"names":["axios","useAuth","registerUser","userData","response","post","console","log","data","loginUser","credentials","_s","status","name","email","person","setIsAuthenticated","setUser","Error","error"],"sources":["C:/Program Files/BTAPPLEX/reactauthts/frontend/src/services/authService.ts"],"sourcesContent":["// src/services/authService.ts\r\nimport axios from 'axios';\r\nimport { useAuth } from '../context/AuthContext';\r\n\r\nexport const registerUser = async (userData: { name: string; email: string; passwd: string }) => {\r\n    const response = await axios.post('http://localhost:5000/api/persons', userData);\r\n    console.log(\"response\", response)\r\n    return response.data;\r\n};\r\n\r\nexport const loginUser = async (credentials: { email: string, passwd: string }) => {\r\n    try {\r\n        const response = await axios.post('http://localhost:5000/login', credentials);\r\n\r\n        if (response.status === 200) {\r\n            // Assuming the response includes user data\r\n            const { name, email } = response.data.person;\r\n\r\n            // Set authentication status and user data in the context\r\n            // eslint-disable-next-line react-hooks/rules-of-hooks\r\n            const { setIsAuthenticated, setUser } = useAuth();\r\n            setIsAuthenticated(true);\r\n            setUser({ name, email });\r\n\r\n            return { name, email };\r\n        } else {\r\n            throw new Error('Failed to log in');\r\n        }\r\n    } catch (error) {\r\n        console.error(\"Login failed\", error);\r\n        throw error;\r\n    }\r\n};"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,wBAAwB;AAEhD,OAAO,MAAMC,YAAY,GAAG,MAAOC,QAAyD,IAAK;EAC7F,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAC,mCAAmC,EAAEF,QAAQ,CAAC;EAChFG,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEH,QAAQ,CAAC;EACjC,OAAOA,QAAQ,CAACI,IAAI;AACxB,CAAC;AAED,OAAO,MAAMC,SAAS,GAAG,MAAOC,WAA8C,IAAK;EAAAC,EAAA;EAC/E,IAAI;IACA,MAAMP,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAC,6BAA6B,EAAEK,WAAW,CAAC;IAE7E,IAAIN,QAAQ,CAACQ,MAAM,KAAK,GAAG,EAAE;MACzB;MACA,MAAM;QAAEC,IAAI;QAAEC;MAAM,CAAC,GAAGV,QAAQ,CAACI,IAAI,CAACO,MAAM;;MAE5C;MACA;MACA,MAAM;QAAEC,kBAAkB;QAAEC;MAAQ,CAAC,GAAGhB,OAAO,CAAC,CAAC;MACjDe,kBAAkB,CAAC,IAAI,CAAC;MACxBC,OAAO,CAAC;QAAEJ,IAAI;QAAEC;MAAM,CAAC,CAAC;MAExB,OAAO;QAAED,IAAI;QAAEC;MAAM,CAAC;IAC1B,CAAC,MAAM;MACH,MAAM,IAAII,KAAK,CAAC,kBAAkB,CAAC;IACvC;EACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZb,OAAO,CAACa,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;IACpC,MAAMA,KAAK;EACf;AACJ,CAAC;AAACR,EAAA,CAtBWF,SAAS;EAAA,QAU8BR,OAAO;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}